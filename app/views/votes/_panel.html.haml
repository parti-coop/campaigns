- vote_link_options = { votable_id: votable.id, votable_type: votable.class.name, show_voters: local_assigns[:show_voters], reactions_count_link: local_assigns[:reactions_count_link] }
.vote-panel{id: vote_panel_dom_id(votable)}
  - vote = user_signed_in? ? votable.fetch_vote_of(current_user) : fetch_anonymous_vote(votable)
  %span.vote-buttons
    .vote-button
      - if vote.present? && vote.choice == 'agree'
        = link_to cancel_votes_path(vote_link_options), method: :post, remote: true, class: 'btn btn-primary btn-choice btn-lg' do
          %span.choice__label 찬성
          %span.choice__count= votable.agrees_count
      - else
        = link_to polymorphic_url([:agree, :votes], vote_link_options), method: :post, remote: true, class: 'btn btn-default btn-choice btn-lg' do
          %span.choice__label 찬성
          %span.choice__count= votable.agrees_count
    - if votable.respond_to? :neutrals_count
      .vote-button
        - if vote.present? && vote.choice == 'neutral'
          = link_to cancel_votes_path(vote_link_options), method: :post, remote: true, class: 'btn btn-primary-neutral btn-choice btn-lg' do
            %span.choice__label 중립
            %span.choice__count= votable.neutrals_count
        - else
          = link_to polymorphic_url([:neutral, :votes], vote_link_options), method: :post, remote: true, class: 'btn btn-default btn-choice btn-lg' do
            %span.choice__label 중립
            %span.choice__count= votable.neutrals_count
    .vote-button
      - if vote.present? && vote.choice == 'disagree'
        = link_to cancel_votes_path(vote_link_options), method: :post, remote: true, class: 'btn btn-primary-sub btn-choice btn-lg' do
          %span.choice__label 반대
          %span.choice__count= votable.disagrees_count
      - else
        = link_to polymorphic_url([:disagree, :votes], vote_link_options), method: :post, remote: true, class: 'btn btn-default btn-choice btn-lg' do
          %span.choice__label 반대
          %span.choice__count= votable.disagrees_count
  - reactions =  votable.try(:comments) || votable.try(:notes)
  - if local_assigns[:reactions_count_link]
    %span.votable-comments-count
      = link_to reactions_count_link do
        %i.fa.fa-commenting
        - if reactions.count > 0
          #{reactions.count}
        - else
          댓글달기
  - elsif reactions.count > 0
    %span.votable-comments-count
      %i.fa.fa-commenting
      #{reactions.count}

  - if show_voters
    .row
      .col-12
        .vote__users.text-left
          - votable.votes.each do |v|
            - if v.user.present?
              = image_tag v.user.image.sm.url, width: 32, height: 32, class: 'img-circle'
            - else
              = image_tag 'default-user.png', width: 32, height: 32, class: 'img-circle'
